{"version":3,"file":"HttpService.js","names":["HttpService","url","fetch","then","res","_handleErrors","json","dado","headers","method","body","JSON","stringify","ok","Error","statusText"],"sources":["../../app-es6/services/HttpService.js"],"sourcesContent":["export class HttpService {\r\n\r\n  /*get(url) {\r\n          return new Promise((resolve, reject) => {\r\n\r\n            let xhr = new XMLHttpRequest();\r\n              xhr.open('GET' ,url);\r\n\r\n              xhr.onreadystatechange = ()=> {\r\n                    if (xhr.readyState == 4) {\r\n                      \r\n                      if(xhr.status == 200) {\r\n                      resolve(JSON.parse(xhr.responseText))\r\n                      } else {\r\n                        reject(xhr.responseText);\r\n                      }\r\n                    }\r\n\r\n              };\r\n\r\n              xhr.send();\r\n        });\r\n\r\n  }\r\n\r\n  post(dado, url) {\r\n\r\n        return new Promise((resolve, reject) => {\r\n          let xhr = new XMLHttpRequest();\r\n          xhr.open(\"POST\", url, true);\r\n          xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n          xhr.onreadystatechange = ()=> {\r\n            if(xhr.readyState == 4) {\r\n              if(xhr.status == 200) {\r\n                  resolve(JSON.parse(xhr.responseText));\r\n              } else {\r\n                reject(xhr.responseText);\r\n              }\r\n            }\r\n          };\r\n          xhr.send(JSON.stringify(dado));\r\n        });\r\n  }*/\r\n\r\n    async get(url){\r\n          return fetch(url)\r\n                .then(res => this._handleErrors(res))\r\n                .then(res => res.json());\r\n      }\r\n\r\n    async post(url,dado){\r\n        return fetch(url,{\r\n          headers:{\"Content-type\":\"application/json\"},\r\n          method:'post',\r\n          body:JSON.stringify(dado),\r\n        }).then(res => this._handleErrors(res));\r\n    } \r\n\r\n    _handleErrors(res){\r\n        if(!res.ok) throw new Error(res.statusText);\r\n        return res\r\n        }\r\n\r\n\r\n  }\r\n\r\n\r\n         \r\n\r\n"],"mappings":";;;;;;;iDACA,oJ;;;;;;;;;;;;;;;6BADaA,W;;;;;;;;UAEX;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;kFASI,iBAAUC,GAAV;cAAA;;cAAA;gBAAA;kBAAA;oBAAA;sBAAA,kCACaC,KAAK,CAACD,GAAD,CAAL,CACAE,IADA,CACK,UAAAC,GAAG;wBAAA,OAAI,KAAI,CAACC,aAAL,CAAmBD,GAAnB,CAAJ;sBAAA,CADR,EAEAD,IAFA,CAEK,UAAAC,GAAG;wBAAA,OAAIA,GAAG,CAACE,IAAJ,EAAJ;sBAAA,CAFR,CADb;;oBAAA;oBAAA;sBAAA;kBAAA;gBAAA;cAAA;YAAA,C;;;;;;;;;;;mFAMA,kBAAWL,GAAX,EAAeM,IAAf;cAAA;;cAAA;gBAAA;kBAAA;oBAAA;sBAAA,kCACWL,KAAK,CAACD,GAAD,EAAK;wBACfO,OAAO,EAAC;0BAAC,gBAAe;wBAAhB,CADO;wBAEfC,MAAM,EAAC,MAFQ;wBAGfC,IAAI,EAACC,IAAI,CAACC,SAAL,CAAeL,IAAf;sBAHU,CAAL,CAAL,CAIJJ,IAJI,CAIC,UAAAC,GAAG;wBAAA,OAAI,MAAI,CAACC,aAAL,CAAmBD,GAAnB,CAAJ;sBAAA,CAJJ,CADX;;oBAAA;oBAAA;sBAAA;kBAAA;gBAAA;cAAA;YAAA,C;;;;;;;;;;iBAQA,uBAAcA,GAAd,EAAkB;YACd,IAAG,CAACA,GAAG,CAACS,EAAR,EAAY,MAAM,IAAIC,KAAJ,CAAUV,GAAG,CAACW,UAAd,CAAN;YACZ,OAAOX,GAAP;UACC"}